|-- angular.json
|-- LICENSE
|-- package-lock.json
|-- package.json
|-- public/
  |-- favicon.ico
  |-- favicon.svg
|-- README.md
|-- src/
  |-- app/
    |-- app-routing.module.ts
    |-- app.component.css
    |-- app.component.html
    |-- app.component.spec.ts
    |-- app.component.ts
    |-- app.config.ts
    |-- app.module.ts
    |-- app.routes.ts
    |-- components/
      |-- dashboard/
        |-- dashboard.component.css
        |-- dashboard.component.html
        |-- dashboard.component.ts
      |-- inventory/
        |-- inventory.component.css
        |-- inventory.component.html
        |-- inventory.component.ts
      |-- reports/
        |-- reports.component.css
        |-- reports.component.html
        |-- reports.component.ts
      |-- sales/
        |-- sales.component.css
        |-- sales.component.html
        |-- sales.component.ts
  |-- index.html
  |-- main.ts
  |-- models/
    |-- inventory.model.ts
    |-- reports.model.ts
    |-- sales.model.ts
  |-- services/
    |-- inventory.service.ts
    |-- reports.service.ts
    |-- sales.service.ts
  |-- styles.css
|-- tsconfig.app.json
|-- tsconfig.json
|-- tsconfig.spec.json


File contents:

|-- angular.json
|-- LICENSE
|-- package-lock.json
|-- package.json
|-- public/
  |-- favicon.ico
  |-- favicon.svg
|-- README.md
|-- src/
  |-- app/
    |-- app-routing.module.ts
      Content:
        import { NgModule } from '@angular/core';
        import { RouterModule, Routes } from '@angular/router';
        import { DashboardComponent } from './components/dashboard/dashboard.component';
        import { InventoryComponent } from './components/inventory/inventory.component';
        import { ReportsComponent } from './components/reports/reports.component';
        import { SalesComponent } from './components/sales/sales.component';
        
        const routes: Routes = [
          { path: '', component: DashboardComponent },
          { path: 'inventory', component: InventoryComponent },
          { path: 'reports', component: ReportsComponent },
          { path: 'sales', component: SalesComponent },
        ];
        
        @NgModule({
          imports: [RouterModule.forRoot(routes)],
          exports: [RouterModule]
        })
        export class AppRoutingModule { }
    |-- app.component.css
      Content:
    |-- app.component.html
      Content:
        <nav class="navbar">
          <a class="navbar-item" [routerLink]="['/']">Dashboard</a>
          <a class="navbar-item" [routerLink]="['/inventory']">Inventory</a>
          <a class="navbar-item" [routerLink]="['/reports']">Reports</a>
          <a class="navbar-item" [routerLink]="['/sales']">Sales</a>
        </nav>
        <router-outlet></router-outlet>
    |-- app.component.spec.ts
      Content:
        import { TestBed } from '@angular/core/testing';
        import { AppComponent } from './app.component';
        
        describe('AppComponent', () => {
          beforeEach(async () => {
            await TestBed.configureTestingModule({
              imports: [AppComponent],
            }).compileComponents();
          });
        
          it('should create the app', () => {
            const fixture = TestBed.createComponent(AppComponent);
            const app = fixture.componentInstance;
            expect(app).toBeTruthy();
          });
        
          it(`should have the 'untitled' title`, () => {
            const fixture = TestBed.createComponent(AppComponent);
            const app = fixture.componentInstance;
            expect(app.title).toEqual('untitled');
          });
        
          it('should render title', () => {
            const fixture = TestBed.createComponent(AppComponent);
            fixture.detectChanges();
            const compiled = fixture.nativeElement as HTMLElement;
            expect(compiled.querySelector('h1')?.textContent).toContain('Hello, untitled');
          });
        });
    |-- app.component.ts
      Content:
        import { Component } from '@angular/core';
        
        @Component({
          selector: 'app-root',
          templateUrl: './app.component.html',
          styleUrls: ['./app.component.css']
        })
        export class AppComponent {
          title = 'Admin Panel';
        }
    |-- app.config.ts
      Content:
        import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
        import { provideRouter } from '@angular/router';
        
        import { routes } from './app.routes';
        
        export const appConfig: ApplicationConfig = {
          providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]
        };
    |-- app.module.ts
      Content:
        import { NgModule } from '@angular/core';
        import { BrowserModule } from '@angular/platform-browser';
        import { AppRoutingModule } from './app-routing.module';
        import { AppComponent } from './app.component';
        import { DashboardComponent } from './components/dashboard/dashboard.component';
        import { InventoryComponent } from './components/inventory/inventory.component';
        import { ReportsComponent } from './components/reports/reports.component';
        import { SalesComponent } from './components/sales/sales.component';
        import { RouterModule } from '@angular/router';
        
        @NgModule({
          declarations: [
            AppComponent,
            DashboardComponent,
            InventoryComponent,
            ReportsComponent,
            SalesComponent
          ],
          imports: [
            BrowserModule,
            AppRoutingModule,
            RouterModule
          ],
          providers: [],
          bootstrap: [AppComponent]
        })
        export class AppModule { }
    |-- app.routes.ts
      Content:
        import { NgModule } from '@angular/core';
        import { RouterModule, Routes } from '@angular/router';
        import { DashboardComponent } from './components/dashboard/dashboard.component';
        import { InventoryComponent } from './components/inventory/inventory.component';
        import { ReportsComponent } from './components/reports/reports.component';
        import { SalesComponent } from './components/sales/sales.component';
        
        const routes: Routes = [
          { path: '', component: DashboardComponent },
          { path: 'inventory', component: InventoryComponent },
          { path: 'reports', component: ReportsComponent },
          { path: 'sales', component: SalesComponent }
        ];
        
        @NgModule({
          imports: [RouterModule.forRoot(routes)],
          exports: [RouterModule]
        })
        export class AppRoutingModule { }
    |-- components/
      |-- dashboard/
        |-- dashboard.component.css
          Content:
            .dashboard {
              text-align: center;
            }
            nav a {
              margin: 0 15px;
              text-decoration: none;
              color: #007bff;
            }
        |-- dashboard.component.html
          Content:
            <div class="container">
              <h2 class="title">Dashboard</h2>
              <p>Welcome to the admin panel dashboard.</p>
            </div>
        |-- dashboard.component.ts
          Content:
            import { Component } from '@angular/core';
            
            @Component({
              selector: 'app-dashboard',
              templateUrl: './dashboard.component.html',
              styleUrls: ['./dashboard.component.css']
            })
            export class DashboardComponent {
              // Component logic
            }
      |-- inventory/
        |-- inventory.component.css
          Content:
            .inventory {
              padding: 20px;
            }
        |-- inventory.component.html
          Content:
            <div *ngFor="let item of items">
              <p>{{ item.name }} - {{ item.quantity }} - ${{ item.price }}</p>
            </div>
        |-- inventory.component.ts
          Content:
            import { Component } from '@angular/core';
            import { InventoryItem } from '../../../models/inventory.model';
            
            @Component({
              selector: 'app-inventory',
              templateUrl: './inventory.component.html',
              styleUrls: ['./inventory.component.css']
            })
            export class InventoryComponent {
              items: InventoryItem[] = [
                { id: 1, name: 'Item 1', quantity: 10, price: 100 },
                { id: 2, name: 'Item 2', quantity: 20, price: 200 }
              ];
            }
      |-- reports/
        |-- reports.component.css
          Content:
            .reports {
              padding: 20px;
            }
        |-- reports.component.html
          Content:
            <div class="container">
              <h2 class="title">Reports</h2>
              <p>Here you can view reports.</p>
            </div>
        |-- reports.component.ts
          Content:
            import { Component } from '@angular/core';
            
            @Component({
              selector: 'app-reports',
              templateUrl: './reports.component.html',
              styleUrls: ['./reports.component.css']
            })
            export class ReportsComponent {
              // Component logic
            }
      |-- sales/
        |-- sales.component.css
          Content:
            .sales {
              padding: 20px;
            }
        |-- sales.component.html
          Content:
            <div *ngFor="let sale of sales">
              <p>{{ sale.productName }} - {{ sale.amount }}</p>
            </div>
        |-- sales.component.ts
          Content:
            import { Component } from '@angular/core';
            import { Sale } from '../../../models/sales.model';
            
            @Component({
              selector: 'app-sales',
              templateUrl: './sales.component.html',
              styleUrls: ['./sales.component.css']
            })
            export class SalesComponent {
              sales: Sale[] = [
                { id: 1, productName: 'Item A', amount: 100, date: new Date() },
                { id: 2, productName: 'Item B', amount: 200, date: new Date() }
              ];
            }
  |-- index.html
    Content:
      <!doctype html>
      <html lang="en">
      <head>
        <meta charset="utf-8">
        <title>Admin Control Panel</title>
        <base href="/">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="icon" type="image/x-icon" href="favicon.svg">
      </head>
      <body>
        <app-root></app-root>
      </body>
      </html>
  |-- main.ts
    Content:
      import { enableProdMode } from '@angular/core';
      import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
      import { AppModule } from './app/app.module';
      
      platformBrowserDynamic().bootstrapModule(AppModule)
        .catch(err => console.error(err));
  |-- models/
    |-- inventory.model.ts
      Content:
        export interface InventoryItem {
          id: number;
          name: string;
          quantity: number;
          price: number;
        }
    |-- reports.model.ts
      Content:
        export interface InventoryItem {
          id: number;
          name: string;
          quantity: number;
        }
    |-- sales.model.ts
      Content:
        export interface Sale {
          id: number;
          productName: string; // Use o nome correto aqui
          amount: number;
          date: Date;
        }
  |-- services/
    |-- inventory.service.ts
      Content:
        export interface InventoryItem {
          id: number;
          name: string;
          quantity: number;
        }
    |-- reports.service.ts
      Content:
        export interface Report {
          id: string;
          title: string;
          content: string;
        }
    |-- sales.service.ts
      Content:
        import { Injectable } from '@angular/core';
        import { HttpClient } from '@angular/common/http';
        import { Observable } from 'rxjs';
        import { Sale } from '../models/sales.model';
        
        @Injectable({
          providedIn: 'root'
        })
        export class SalesService {
        
          private apiUrl = 'http://localhost:3000/api/sales'; // URL da sua API
        
          constructor(private http: HttpClient) { }
        
          getSales(): Observable<Sale[]> {
            return this.http.get<Sale[]>(this.apiUrl);
          }
        
          // Outros métodos para adicionar, atualizar e deletar vendas
        }
  |-- styles.css
    Content:
      @import '../node_modules/bulma/css/bulma.min.css';
      
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }
      
      .container {
        padding: 2rem;
      }
      
      .title {
        font-size: 2rem;
        margin-bottom: 1rem;
      }
      
      .navbar {
        margin-bottom: 2rem;
      }
|-- tsconfig.app.json
|-- tsconfig.json
|-- tsconfig.spec.json
